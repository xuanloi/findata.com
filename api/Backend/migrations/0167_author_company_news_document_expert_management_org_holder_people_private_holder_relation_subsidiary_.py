# Generated by Django 3.1.14 on 2022-05-24 07:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Backend', '0166_auto_20220519_1437'),
    ]

    operations = [
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('uid', models.CharField(max_length=20, unique=True)),
                ('legal_id', models.CharField(max_length=20, null=True)),
                ('dob', models.DateField(null=True)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('email', models.CharField(max_length=50, null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('avatar', models.CharField(max_length=200, null=True)),
                ('degree', models.CharField(max_length=200, null=True)),
                ('domicile', models.CharField(max_length=200, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'people',
            },
        ),
        migrations.CreateModel(
            name='Task_Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('assign_date', models.DateTimeField()),
                ('due_date', models.DateTimeField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(null=True)),
                ('approve_time', models.DateTimeField(null=True)),
                ('enable', models.BooleanField(default=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('priority', models.BooleanField(default=False)),
                ('company_factor', models.FloatField(null=True)),
                ('unit_price', models.FloatField(null=True)),
                ('into_money', models.FloatField(null=True)),
                ('entry_time', models.DateTimeField(null=True)),
                ('waiting1_time', models.DateTimeField(null=True)),
                ('waiting2_time', models.DateTimeField(null=True)),
                ('history', models.TextField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('assigner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.account')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('recipient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.account')),
                ('report_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.classification')),
                ('report_period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.classification')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.classification')),
            ],
            options={
                'db_table': 'task_profile',
                'unique_together': {('company', 'report_period', 'year', 'report_name')},
            },
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
            ],
            options={
                'db_table': 'expert',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('issue_date', models.DateField(null=True)),
                ('year', models.PositiveIntegerField(null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('note', models.TextField(null=True)),
                ('number_page', models.PositiveIntegerField(null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('file', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.file')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.task_profile')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.classification')),
            ],
            options={
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='Company_News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(max_length=500, null=True)),
                ('content', models.TextField()),
                ('image', models.CharField(max_length=200, null=True)),
                ('note', models.TextField(null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_time', models.DateTimeField(null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.account')),
            ],
            options={
                'db_table': 'company_news',
            },
        ),
        migrations.CreateModel(
            name='Subsidiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capital', models.FloatField(null=True)),
                ('percentage', models.FloatField(null=True)),
                ('voting_rate', models.FloatField(null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('subsidiary', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.classification')),
            ],
            options={
                'db_table': 'subsidiary',
                'unique_together': {('company', 'subsidiary')},
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('other', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.people')),
                ('people', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.people')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.classification')),
            ],
            options={
                'db_table': 'relation',
                'unique_together': {('people', 'other')},
            },
        ),
        migrations.CreateModel(
            name='Private_Holder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_share', models.PositiveBigIntegerField()),
                ('percentage', models.FloatField(null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('people', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.people')),
            ],
            options={
                'db_table': 'private_holder',
                'unique_together': {('people', 'company')},
            },
        ),
        migrations.CreateModel(
            name='Org_Holder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_share', models.PositiveBigIntegerField()),
                ('percentage', models.FloatField(null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
            ],
            options={
                'db_table': 'org_holder',
                'unique_together': {('organization', 'company')},
            },
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=20, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.company')),
                ('people', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='management', to='Backend.people')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.classification')),
            ],
            options={
                'db_table': 'management',
                'unique_together': {('people', 'company', 'position')},
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.document')),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Backend.expert')),
            ],
            options={
                'db_table': 'author',
                'unique_together': {('document', 'expert')},
            },
        ),
    ]
